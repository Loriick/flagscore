import { NextResponse } from "next/server";

import { supabase } from "../../../lib/supabase";

export async function POST() {
  try {
    console.log("üîß Tentative de cr√©ation de la table teams via API...");

    // Note: Cette m√©thode ne fonctionne g√©n√©ralement pas avec Supabase
    // car l'ex√©cution de SQL arbitraire est d√©sactiv√©e par s√©curit√©
    const { data, error } = await supabase
      .from("information_schema.tables")
      .select("table_name")
      .eq("table_name", "teams");

    if (error) {
      console.error("‚ùå Erreur lors de la v√©rification:", error);
      return NextResponse.json(
        {
          success: false,
          message: "Impossible de cr√©er la table via API",
          error: error.message,
          suggestion: "Cr√©er la table manuellement dans Supabase Dashboard",
          instructions: {
            step1: "Aller sur https://supabase.com/dashboard",
            step2: "S√©lectionner votre projet Flagscore",
            step3: "Ouvrir SQL Editor",
            step4: "Ex√©cuter le script SQL fourni dans /create-teams-table",
          },
        },
        { status: 500 }
      );
    }

    return NextResponse.json({
      success: true,
      message: "Table teams cr√©√©e avec succ√®s",
      data: data,
    });
  } catch (error) {
    console.error("‚ùå Erreur g√©n√©rale:", error);

    return NextResponse.json(
      {
        success: false,
        message: "Erreur lors de la cr√©ation de la table teams",
        error: error instanceof Error ? error.message : "Erreur inconnue",
        solution: "Cr√©er la table manuellement dans Supabase Dashboard",
      },
      { status: 500 }
    );
  }
}
